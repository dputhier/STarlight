% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_grid_class.R
\name{compute_k_ripley,STGrid-method}
\alias{compute_k_ripley,STGrid-method}
\title{Estimate Ripley's reduced second moment function for each feature in a spatial grid.}
\usage{
\S4method{compute_k_ripley}{STGrid}(
  object,
  rmax = 125,
  nlarge = 2e+06,
  var.approx = FALSE,
  ratio = FALSE,
  sampling_rate = 0.25,
  seed = 123,
  verbose = TRUE
)
}
\arguments{
\item{object}{An object of class "STGrid".}

\item{rmax}{Maximum desired value of the argument r.}

\item{nlarge}{Efficiency threshold. If the number of points exceeds nlarge, then only the border correction will be computed (by default), using a fast algorithm.}

\item{var.approx}{Logical. If TRUE, the approximate variance of K(r) under CSR will also be computed.}

\item{ratio}{Logical. If TRUE, the numerator and denominator of each edge-corrected estimate will also be saved, for use in analyzing replicated point patterns.}

\item{sampling_rate}{By default a subset of molecules is sampled. Set sampling_rate to 1 to keep all molecules.}

\item{seed}{The seed for sampling_rate.}

\item{verbose}{Whether to print porgress bar.}
}
\value{
An updated object of class "STGrid" with the Ripley's K function estimates stored in the slot 'ripley_k_function'.
}
\description{
This method calculates Ripley's reduced second moment function, K(r), for each feature in a spatial grid.
}
\examples{
example_dataset()
Xenium_Mouse_Brain_Coronal_7g <- compute_k_ripley(Xenium_Mouse_Brain_Coronal_7g, verbose=FALSE)

}
